version: '3'

tasks:
  build:
    desc: "Build the application"
    watch: true
    sources:
      - '**/*.go'
    cmds:
      - go build -o app cmd/server/main.go

  test:
    cmds:
      - go test -v ./...

  test:commodity:all:
    desc: GET All Commodities, {page} {per_page} {order_by}
    cmds:
    - |
      set -- {{.CLI_ARGS}}
      curl -i -X GET "http://localhost:8080/api/v1/commodities?page=${1}&per_page=${2}&order_by=${3}"

  test:commodity:get:
    desc: GET Commodity, {id}
    cmds:
    - |
      set -- {{.CLI_ARGS}}
      curl -i -X GET http://localhost:8080/api/v1/commodities/${1}
 
  test:commodity:post:
    desc: POST a test Commodity, {name} {price}
    cmds:
    - |
      set -- {{.CLI_ARGS}}
      curl -i -X POST http://localhost:8080/api/v1/commodities -H "Content-Type: application/json" -d "{\"name\": \"${1}\", \"price\": ${2}}"

  test:commodity:put:
    desc: PUT Commodity Price, {id} {price}
    cmds:
    - |
      set -- {{.CLI_ARGS}}
      curl -i -X PUT http://localhost:8080/api/v1/commodities/${1} -H "Content-Type: application/json" -d "{\"price\": ${2}}"

  test:commodity:delete:
    desc: DELETE Commodity, {id}
    cmds:
    - |
      set -- {{.CLI_ARGS}}
      curl -i -X DELETE http://localhost:8080/api/v1/commodities/${1}

  lint:
    cmds:
      - golangci-lint run

  run:
    cmds:
      - docker-compose up --build

  clear:
    cmds:
      - docker-compose down -v
